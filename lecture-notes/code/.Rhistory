detach(name=package:som,unload=TRUE)
source("/Users/lutz/Google Drive/Projects/POPSOM/popsom/R/map-utils.R")
detach(name=package:som,unload=TRUE)
m <- map.build(df, labels, xdim=25, ydim=20, train=10000,algorithm="som")
source("/Users/lutz/Google Drive/Projects/POPSOM/popsom/R/map-utils.R")
df <- subset(iris,select=-Species)#
labels <- subset(iris,select=Species)
m <- map.build(df, labels, xdim=25, ydim=20, train=1000,algorithm="som")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=1000,algorithm="som")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,algorithm="som")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,algorithm="batchsom")
map.build
source("/Users/lutz/Google Drive/Projects/POPSOM/popsom/R/map-utils.R")
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,algorithm="batchsom")
map.convergence(m,verb=TRUE)
dyn.load("/Users/lutz/Google Drive/Projects/POPSOM/popsom.Rcheck/00_pkg_src/popsom/src/popsom.so")
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,algorithm="vsom")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,algorithm="vsom")
map.convergence(m,verb=TRUE)
map.starburst(m)
df <- subset(iris,select=-Species)#
labels <- subset(iris,select=Species)
source("/Users/lutz/Google Drive/Projects/POPSOM/popsom/R/map-utils.R")
dyn.load("/Users/lutz/Google Drive/Projects/POPSOM/popsom.Rcheck/00_pkg_src/popsom/src/popsom.so")
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,algorithm="vsom")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,algorithm="som")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,algorithm="batchsom")
map.convergence(m,verb=TRUE)
map.build
library(popsom)
map.build
library(popsom)
map.build
ls()
rm("map.build")
ls()
rm(list=ls())
ls
ls()
libary(popsom)
library(popsom)
ls()
map.build
data(iris)
df <- subset(iris,select=-Species)#
labels <- subset(iris,select=Species)
m <- map.build(df, labels, xdim=15, ydim=10, train=1000)
map.convergence(m)
m <- map.build(df, labels, xdim=15, ydim=10, train=10000)
map.convergence(m)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,alg="som")
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,alg="vsom")
m <- map.build(df, labels, xdim=15, ydim=10, train=10000,alg="som")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="vsom")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="som")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="vsom")
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="vsom",alpha=.2)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="vsom",alpha=.1)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="vsom",alpha=.5)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="vsom",alpha=.8)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=15, ydim=10, train=100000,alg="vsom",alpha=.25)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=25, ydim=20, train=100000,alg="vsom",alpha=.25)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=25, ydim=20, train=100000,alg="vsom",alpha=.3)
map.convergence(m,verb=TRUE)
m <- map.build(df, labels, xdim=25, ydim=20, train=100000,alg="vsom",alpha=.25)
map.convergence(m,verb=TRUE)
map.starburst(m)
m <- map.build(df, labels, xdim=25, ydim=20, train=100000,alg="batchsom",alpha=.25)
map.convergence(m,verb=TRUE)
map.starburst(m)
m <- map.build(df, labels, xdim=25, ydim=20, train=100000,alg="som",alpha=.25)
map.convergence(m,verb=TRUE)
map.starburst(m)
help(as.integer)
help(length)
ls()
map.build
ls()
<!--
data(iris)#
attach(iris)#
library(neuralnet)
summary(iris)
plot(iris)
Species.numeric <- as.numeric(Species)#
iris.df <- data.frame(iris,Species.numeric)#
iris.df <- subset(iris.df,select=-Species) # delete the old label
summary(iris.df)
formula <- as.formula("Species.numeric~Sepal.Length+Sepal.Width+Petal.Length+Petal.Width")#
net <- neuralnet(formula,iris.df,hidden=2)
plot(net)
result <- round(net$net.result[[1]])#
table(iris.df$Species.numeric,result)
library(popsom)
coordinate
rowix
map.starburst
plot.heat
l <- ()
l <- c()
l <- c(l,c(1,2))
l
l <- c()
l <- c(l,list(x=1,y=2))
l
l <- c(l,list(x=3,y=4))
l
l[1]
l[2]
l <- list()
l <- c(l,list(x=1,y=2))
l
require(graphics)#
#
x <- rnorm(50)#
y <- runif(30)
ks.test(x, y)
require(graphics)#
#
x <- rnorm(50)#
y <- runif(30)
x <- rnorm(50)
y <- rnorm(50)
ks.test(x, y)
y <- x
ks.test(x, y)
y <- rnorm(50)
ks.test(x, y)
require(graphics)#
#
x <- rnorm(50)#
y <- runif(30)
ks.test(x, y)
## set data frame and labels#
df <- subset(iris,select=-Species)#
labels <- subset(iris,select=Species)#
#
## build a map#
m <- map.build(df, labels, xdim=15, ydim=10, train=1000)#
#
## display marginal distribution of dimension 1#
map.marginal(m,1)
data(iris)#
#
## set data frame and labels#
df <- subset(iris,select=-Species)#
labels <- subset(iris,select=Species)#
#
## build a map#
m <- map.build(df, labels, xdim=15, ydim=10, train=1000)
map.starburst(m)
load(datasets)
load("datasets")
help(datasets)
library(help = "datasets")
XOR <- c(0,1,1,0)#
xor.data <- data.frame(expand.grid(c(0,1), c(0,1)), XOR)#
print(net.xor <- neuralnet( XOR~Var1+Var2, xor.data, hidden=2, rep=5))#
plot(net.xor, rep="best")
getwd()
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
iris.df[1:10,]
levels
level(iris.df$)
level(iris.df$Species)
levels(iris.df$Species)
iris.df[1:5,]
levels(iris.df$Species)
wdbc.df <- read.csv(file="wdbc.csv", header=TRUE, sep=",")
wdbc.df[1:5,]
source("ann-wdbc.r")
source("ann-wdbc.r")
colnames(wdbc.df)
df <- wdbc.df[,2:11]
df
colname(df)
colnames(df)
source("ann-wdbc.r")
source("ann-wdbc.r")
source("ann-wdbc.r")
source("ann-wdbc.r")
source("ann-wdbc.r")
plot(net)
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-iris.r")
source("ann-wdbc.r")
library(rpart)
help(rpart)
source("rpart-iris.r")
source("rpart-iris.r")
text.rpart(tree)
library(rpart)
text.rpart(tree)
text(tree)
xpred(tree)
xpred.rpart(tree)
help(predict)
predict(tree)
round(predict(tree))
help(fit)
tree.fit
tree
round(predict(tree))
predict(tree, type="class")
pred = predict(tree, type="class")
table(pred)
table(pred, Species)
table(pred, iris$Species)
table(iris$Species, pred)
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
names(wdbc)
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-iris.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
source("rpart-wdbc.r")
